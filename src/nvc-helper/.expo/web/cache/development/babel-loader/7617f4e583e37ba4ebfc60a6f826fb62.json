{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar MyApp = function MyApp() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var getFeelings = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('http://localhost:3000/feelings?language=en-US');\n        var json = yield response.json();\n        setData(json);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    });\n\n    return function getFeelings() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getFeelings();\n  }, []);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    children: isLoading ? _jsx(ActivityIndicator, {}) : _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(_ref2, index) {\n        var id = _ref2.id;\n        return id;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(Text, {\n          children: item.feeling\n        });\n      }\n    })\n  });\n};\n\nexport default MyApp;","map":{"version":3,"names":["StatusBar","React","useEffect","useState","MyApp","isLoading","setLoading","data","setData","getFeelings","response","fetch","json","error","console","flex","padding","index","id","item","feeling"],"sources":["/home/thostr/src/nvc-helper/src/nvc-helper/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, FlatList, Text, View } from 'react-native';\n\nconst  MyApp = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  const getFeelings = async () => {\n     try {\n      const response = await fetch('http://localhost:3000/feelings?language=en-US');\n      const json = await response.json();\n      setData(json);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getFeelings();\n  }, []);\n\n  return (\n    <View style={{ flex: 1, padding: 24 }}>\n      {isLoading ? <ActivityIndicator/> : (\n        <FlatList\n          data={data}\n          keyExtractor={({ id }, index) => id}\n          renderItem={({ item }) => (\n            <Text>{item.feeling}</Text>\n          )}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default MyApp;"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAGA,IAAOC,KAAK,GAAG,SAARA,KAAQ,GAAM;EACnB,gBAAgCD,QAAQ,CAAC,IAAD,CAAxC;EAAA;EAAA,IAAOE,SAAP;EAAA,IAAkBC,UAAlB;;EACA,iBAAwBH,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOI,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAMC,WAAW;IAAA,6BAAG,aAAY;MAC7B,IAAI;QACH,IAAMC,QAAQ,SAASC,KAAK,CAAC,+CAAD,CAA5B;QACA,IAAMC,IAAI,SAASF,QAAQ,CAACE,IAAT,EAAnB;QACAJ,OAAO,CAACI,IAAD,CAAP;MACD,CAJA,CAIC,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACD,CANA,SAMS;QACRP,UAAU,CAAC,KAAD,CAAV;MACD;IACF,CAVgB;;IAAA,gBAAXG,WAAW;MAAA;IAAA;EAAA,GAAjB;;EAYAP,SAAS,CAAC,YAAM;IACdO,WAAW;EACZ,CAFQ,EAEN,EAFM,CAAT;EAIA,OACE,KAAC,IAAD;IAAM,KAAK,EAAE;MAAEM,IAAI,EAAE,CAAR;MAAWC,OAAO,EAAE;IAApB,CAAb;IAAA,UACGX,SAAS,GAAG,KAAC,iBAAD,KAAH,GACR,KAAC,QAAD;MACE,IAAI,EAAEE,IADR;MAEE,YAAY,EAAE,6BAASU,KAAT;QAAA,IAAGC,EAAH,SAAGA,EAAH;QAAA,OAAmBA,EAAnB;MAAA,CAFhB;MAGE,UAAU,EAAE;QAAA,IAAGC,IAAH,SAAGA,IAAH;QAAA,OACV,KAAC,IAAD;UAAA,UAAOA,IAAI,CAACC;QAAZ,EADU;MAAA;IAHd;EAFJ,EADF;AAaD,CAjCD;;AAmCA,eAAehB,KAAf"},"metadata":{},"sourceType":"module"}